/*
 * @author CSE8B Winter 2018 Staff
 * 02/04/18
 */

// THIS FILE SHOULD extends HappyAnimal

/* EDIT THIS FILE  */

import java.awt.*;
import java.util.Random;

/* File Header:
 * This file extends from HappyAnimal.java.
 * This file allows for the construction of a sloth and
 * allows for the sloth to perform certain actions.
 *
 * Mark Choe
 * mychoe@ucsd.edu
 *
 * Class Header:
 * The purpose of this class is to allow for the creation 
 * of a working sloth.
 */

// This class implements the Sloth critter class.
// Notice that it inherits from the critter class.
public class Sloth extends HappyAnimal {
	// You can add your own instance variables

	/* Constructor: Create a new Sloth. */
	public Sloth() {
		// TODO
		displayName = "S";
		eaten = false;
		direction = Direction.NORTH;
	}

	// eating behavior of Sloth

	/**Return whether or not the sloth will eat and count
	 * count how many times the sloth has eaten.
	 * @param N/A
	 * @return true when the sloth will eat
	 * */
	@Override
		protected boolean eat() {
			// TODO
			count++;
			return true;
		}

	// the fight method of Sloth

	/**Return a scratch attack if the sloth has eaten less than 10
	 * times and a pounce attack if the sloth has eaten 10 or more times.
	 * @param N/A
	 * @return a scratch attack if the count is less than 10 or a pounce
	 * attack if the count is 10 or greater
	 * */
	@Override
		protected Attack fight(String opponent) {
			// TODO
			if (count >= 10){
				return Attack.POUNCE;
			} else {
				return Attack.SCRATCH;
			}
		}

	// the move method of Sloth

	/**Return what direction the sloth will move
	 * @param N/A
	 * @return move north if the sloth was going east and vice versa
	 * */
	@Override
		protected Direction getMove() {
			// TODO
			if (direction == Direction.NORTH){
				direction = Direction.EAST;
			} else if (direction == Direction.EAST){
				direction = Direction.NORTH;
			}
			return direction;
		}

	/**Change the sloth's display name to "Zzz".
	 * @param N/A
	 * @return N/A
	 * */
	@Override
		protected void sleep() {
			// TODO
			displayName = "Zzz";
		}

	/**Change the sloth's display name to "S".
	 * @param N/A
	 * @return N/A
	 * */
	@Override
		protected void wakeup() {
			// TODO
			displayName = "S";
		}
}
