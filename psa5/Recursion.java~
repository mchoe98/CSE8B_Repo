/*
 * Test program for classes Point and Circle for Shapes inheritance
 * exercise - CSE 8B
 *
 * Program draws interlocking squares.
 */

import java.awt.*;
import objectdraw.*;

public class Recursion extends WindowController
{
  public void begin()
  {
    try
    {
      makeSquares();
    }
    catch ( Exception e )
    {
      String msg1 = "An Exception Occurred!";
      String msg2 = "Check the terminal window";
      String msg3 = "for details!";

      Text errorMsg1 = new Text( msg1, 25, 200, canvas );
      Text errorMsg2 = new Text( msg2, 25, 225, canvas );
      Text errorMsg3 = new Text( msg3, 25, 250, canvas );

      errorMsg1.setColor( Color.RED );
      errorMsg1.setFontSize( 32 );
      errorMsg1.setBold( true );

      errorMsg2.setColor( Color.RED );
      errorMsg2.setFontSize( 32 );
      errorMsg2.setBold( true );

      errorMsg3.setColor( Color.RED );
      errorMsg3.setFontSize( 32 );
      errorMsg3.setBold( true );

      e.printStackTrace();
    }
  }

  public void makeSquares()
  {
    Point point = new Point(150, 150);
    
    Square s1 = new Square();
    Square s2 = new Square(150, 150, 200);
    Square s3 = new Square(point, 200);
    Square s4 = new Square(s2);

    s4.move(100, 100);

    recursiveSquare(s3, 0.5, 6);

  }  // End of makeSquares()

  private void recursiveSquare(Square square, double proportion, int n) {

    // Don't forget the base case!

    // Make the squares and implement the recursion here:


    
    // This draws the square we received.
    square.draw(canvas, Color.LIGHT_GRAY, true);
    square.draw(canvas, Color.BLACK, false);
    
  }

} // End of class 
